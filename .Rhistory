#'  release_id,
#'  token = NA
#')
#'
#'@param release_id Integer value representing a valid release ID
#'@param token (optional) Token object obtained from authorize()
#'@examples
#'# Retrieve the release statistics
#'stats <- get_release_stats(1)
get_all_label_releases = function(label_id, options=list(), token=NA){
url <- sprintf("%s/labels/%s/releases?%s", BASE_URL, label_id, parse_options(options))
return(content(get(url, token)))
},
#' Get release statistics
#'
#'@usage get_release_stats(
#'  release_id,
#'  token = NA
#')
#'
#'@param release_id Integer value representing a valid release ID
#'@param token (optional) Token object obtained from authorize()
#'@examples
#'# Retrieve the release statistics
#'stats <- get_release_stats(1)
get_search = function(query, token, options=list()){
url <- sprintf("%s/database/search?q=%s&?%s", BASE_URL, query, parse_options(options))
return(content(get(url, token)))
}
)
)
d <- Discogs(key, secret)
Discogs <- function(key, secret, cache=T){
library(R6)
library(httr)
library(jsonlite)
d <- R6Class("Discogs",
inherit = Database,
public = list(
key = NULL,
secret = NULL,
cache = T,
token = NULL,
initialize = function(key, secret, cache=T){
BASE_URL = "https://api.discogs.com"
oauth <- oauth_app("Discogs extensions", key = key, secret = secret)
endpoint <- oauth_endpoint(request = sprintf("%s/oauth/request_token", BASE_URL),
authorize = "https://www.discogs.com/oauth/authorize",
access = sprintf("%s/oauth/access_token", BASE_URL))
self$token <- oauth1.0_token(endpoint, oauth, cache = cache)
},
get_token = function(){
return(self$token)
}
)
)
return(d$new(key, secret, cache))
}
d <- Discogs(key, secret)
d$get_release(release_id = 1)
Discogs <- function(key, secret, cache=T){
library(R6)
library(httr)
library(jsonlite)
d <- R6Class("Discogs",
inherit = Database,
public = list(
BASE_URL = "https://api.discogs.com",
key = NULL,
secret = NULL,
cache = T,
token = NULL,
initialize = function(key, secret, cache=T){
BASE_URL = "https://api.discogs.com"
oauth <- oauth_app("Discogs extensions", key = key, secret = secret)
endpoint <- oauth_endpoint(request = sprintf("%s/oauth/request_token", BASE_URL),
authorize = "https://www.discogs.com/oauth/authorize",
access = sprintf("%s/oauth/access_token", BASE_URL))
self$token <- oauth1.0_token(endpoint, oauth, cache = cache)
},
get_token = function(){
return(self$token)
}
)
)
return(d$new(key, secret, cache))
}
d <- Discogs(key, secret)
d$get_release(release_id = 1)
Discogs <- function(key, secret, cache=T){
library(R6)
library(httr)
library(jsonlite)
d <- R6Class("Discogs",
inherit = Database,
public = list(
BASE_URL = "https://api.discogs.com",
key = NULL,
secret = NULL,
cache = T,
token = NULL,
initialize = function(key, secret, cache=T){
BASE_URL = "https://api.discogs.com"
oauth <- oauth_app("Discogs extensions", key = key, secret = secret)
endpoint <- oauth_endpoint(request = sprintf("%s/oauth/request_token", BASE_URL),
authorize = "https://www.discogs.com/oauth/authorize",
access = sprintf("%s/oauth/access_token", BASE_URL))
self$token <- oauth1.0_token(endpoint, oauth, cache = cache)
},
get_token = function(){
return(self$token)
}
)
)
return(d$new(key, secret, cache))
}
d <- Discogs(key, secret)
d$get_release(release_id = 1)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("DiscogsAPI/")
document()
setwd("..")
install("DiscogsAPI")
library(DiscogsAPI)
remove.packages("DiscogsAPI")
install("discogsAPI")
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("DiscogsAPI")
library(DiscogsAPI)
DiscogsAPI::
key <- "tOPxZAqfnnwaRMwtVnvS"
secret <- "cwARlOjMeNcKWEGRPEjvBUafrFPFhEiy"
key <- "tOPxZAqfnnwaRMwtVnvS"
secret <- "cwARlOjMeNcKWEGRPEjvBUafrFPFhEiy"
token <- authorize(key, secret)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("DiscogsAPI")
document()
install("DiscogsAPI")
setwd("DiscogsAPI/")
library("devtools")
library(roxygen2)
document()
setwd("DiscogsAPI/")
document()
library(jsonlite)
install.packages("jsonlite")
document()
setwd("..")
install("DiscogsAPI")
library(DiscogsAPI)
key <- "tOPxZAqfnnwaRMwtVnvS"
secret <- "cwARlOjMeNcKWEGRPEjvBUafrFPFhEiy"
token <- authorize(key, secret)
get_release(1, token = token)
DiscogsAPI::BASE_URL
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("DiscogsAPI")
library(DiscogsAPI)
key <- "tOPxZAqfnnwaRMwtVnvS"
secret <- "cwARlOjMeNcKWEGRPEjvBUafrFPFhEiy"
token <- authorize(key, secret)
get_release(1, token = token)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("DiscogsAPI")
library(DiscogsAPI)
key <- "tOPxZAqfnnwaRMwtVnvS"
secret <- "cwARlOjMeNcKWEGRPEjvBUafrFPFhEiy"
token <- authorize(key, secret)
get_release(1, token = token)
r <- get_release(1, token = token)
r$master_id
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("DiscogsAPI")
library(DiscogsAPI)
library(DiscogsAPI)
remove.packages("DiscogsAPI")
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
key <- "tOPxZAqfnnwaRMwtVnvS"
secret <- "cwARlOjMeNcKWEGRPEjvBUafrFPFhEiy"
token <- authorize(key, secret)
r <- get_release(1, token = token)
r$id
r$status
library(discogsAPI)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
remove.packages("DiscogsAPI")
library(discogsAPI)
httr::GET(url = "https://api.discogs.com/release/1", config = list(token = "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB"))
httr::GET(url = "https://api.discogs.com/releases/1", config = list(token = "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB"))
res <- httr::GET(url = "https://api.discogs.com/releases/1", config = list(token = "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB"))
headers(res)
headers(res)
library(httr)
headers(res)
res$url
res$request$auth_token
res$request$headers
res$request$method
res$request$url
res$handle
Token1.0
Token1.0$new()
res <- httr::GET(url = "https://api.discogs.com/releases/1&token=SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
headers(res)
res <- httr::GET(url = "https://api.discogs.com/releases/1&token=SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
headers(res)
res <- RCurl::httpGET("https://api.discogs.com/releases/1&token=SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
library(discogsAPI)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
get_identity <- function(token){
url = sprintf("%s/oauth/identity", BASE_URL)
return(content(get(url, config(token = token))))
}
token <- "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB"
#'  token = NA
#')
#'
#'@param url
#'@param token
#'
#'@details
#'This function is not supposed to used directly, but is used through other functions
#'
#'@examples
get <- function(url, token=NA){
if (length(token) == 0 || suppressWarnings(is.na(token))){
Sys.sleep(60 / 25)
response <- httr::GET(url)
} else {
Sys.sleep(1)
response <- httr::GET(url, config(token = token))
}
return(response)
}
get_identity(token)
BASE_URL <- "https://api.discogs.com"
get_identity(token)
library(discogsAPI)
get_identity("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
library(discogsAPI)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
rm(list=c("BASE_URL", "get", "get_identity"))
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
get_identity("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
#'  token = NA
#')
#'
#'@param url
#'@param token
#'
#'@details
#'This function is not supposed to used directly, but is used through other functions
#'
#'@examples
get <- function(url, token=NA){
if (length(token) == 0 || suppressWarnings(is.na(token))){
Sys.sleep(60 / 25)
response <- httr::GET(url)
} else if (typeof(token) == 'character'){
Sys.sleep(1)
response <- httr::GET(paste0(url, "&token=", token))
}
else {
Sys.sleep(1)
response <- httr::GET(url, config(token = token))
}
return(response)
}
get_identity("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
#'  token = NA
#')
#'
#'@param url
#'@param token
#'
#'@details
#'This function is not supposed to used directly, but is used through other functions
#'
#'@examples
get <- function(url, token=NA){
if (length(token) == 0 || suppressWarnings(is.na(token))){
Sys.sleep(60 / 25)
response <- httr::GET(url)
} else if (typeof(token) == 'character'){
Sys.sleep(1)
print("check")
response <- httr::GET(paste0(url, "&token=", token))
}
else {
Sys.sleep(1)
response <- httr::GET(url, config(token = token))
}
return(response)
}
get_identity("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
rm(list = c("get"))
document()
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
get_identity("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
typeof("asd a")
typeof("asd a") == "character"
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
get_identity("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
get_release(1, "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
length("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB") == 0
is.na("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
get_identity("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
get_identity(token = "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
get_identity(token = "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
library("devtools")
library(roxygen2)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
get_identity(token = "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
key <- "tOPxZAqfnnwaRMwtVnvS"
secret <- "cwARlOjMeNcKWEGRPEjvBUafrFPFhEiy"
token <- authorize(key, secret)
get_identity(token)
get_identity(token = "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
a <- "https://api.discogs.com/oauth/identity"
library(httr)
library(jsonlite)
token <- "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB"
httr::GET(paste0(a, "&token=", token))
a <- "https://api.discogs.com/releases/1"
token <- "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB"
httr::GET(paste0(a, "&token=", token))
a <- "https://api.discogs.com/release/1"
httr::GET(paste0(a, "&token=", token))
url <- paste0(a, "&token=", token)
url
a <- "https://api.discogs.com/releases/1"
library(httr)
library(jsonlite)
token <- "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB"
url <- paste0(a, "&token=", token)
url
httr::GET(url)
a <- "https://api.discogs.com/database/search?q=Nirvana"
token <- "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB"
url <- paste0(a, "&token=", token)
url
httr::GET(url)
a <- "https://api.discogs.com/releases/1"
library(httr)
library(jsonlite)
token <- "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB"
url <- paste0(a, "&token=", token)
url
httr::GET(url)
token <- "QPnxgSWQlELaGRGjiSRFMppdcpEjpjwOAFqIsEyY"
url <- paste0(a, "&token=", token)
url
httr::GET(url)
httr::GET(a, add_headers(Authorization = token))
key <- "tOPxZAqfnnwaRMwtVnvS"
secret <- "cwARlOjMeNcKWEGRPEjvBUafrFPFhEiy"
token <- authorize(key, secret)
httr::GET(a, add_headers(Authorization = token))
a <- "https://api.discogs.com/oath/identity"
library(httr)
library(jsonlite)
token <- "QPnxgSWQlELaGRGjiSRFMppdcpEjpjwOAFqIsEyY"
httr::GET(a, add_headers(Authorization = token))
a <- "https://api.discogs.com/oauth/identity"
token <- "QPnxgSWQlELaGRGjiSRFMppdcpEjpjwOAFqIsEyY"
httr::GET(a, add_headers(Authorization = token))
b <- httr::GET(a, add_headers(Authorization = token))
b
headers(b)
content(b)
a <- "https://api.discogs.com/oauth/identity"
library(httr)
library(jsonlite)
token <- "QPnxgSWQlELaGRGjiSRFMppdcpEjpjwOAFqIsEyY"
b <- httr::GET(a, add_headers(Authorization = token))
content(b)
a <- "https://api.discogs.com/identity"
library(httr)
library(jsonlite)
token <- "QPnxgSWQlELaGRGjiSRFMppdcpEjpjwOAFqIsEyY"
b <- httr::GET(a, add_headers(Authorization = token))
content(b)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
